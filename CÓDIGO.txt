/* Assumindo que a data do dia é armazenada na macrovariável hoje */
%let hoje = %sysfunc(today(), yymmdd10.);

/* Carregar as tabelas current e previous */
data current;
    input NUMFUNC $;
    datalines;
1001
1002
1003
1005
;
run;

data previous;
    input NUMFUNC $;
    datalines;
1001
1002
1004
;
run;

/* Encontrar funcionários que saíram */
proc sql;
    create table saiu as
    select a.NUMFUNC, "&hoje"d as DT_SAIU format=yymmdd10.
    from previous a
    left join current b
    on a.NUMFUNC = b.NUMFUNC
    where b.NUMFUNC is null;
quit;

/* Encontrar funcionários que entraram */
proc sql;
    create table entrou as
    select a.NUMFUNC, "&hoje"d as DT_ENTROU format=yymmdd10.
    from current a
    left join previous b
    on a.NUMFUNC = b.NUMFUNC
    where b.NUMFUNC is null;
quit;

/* Combinar as tabelas com a data de entrada e saída */
proc sql;
    create table final as
    select 
        c.NUMFUNC, 
        coalesce(e.DT_ENTROU, .) as DT_ENTROU format=yymmdd10.,
        coalesce(s.DT_SAIU, .) as DT_SAIU format=yymmdd10.
    from 
        current c
    left join 
        entrou e on c.NUMFUNC = e.NUMFUNC
    left join 
        saiu s on c.NUMFUNC = s.NUMFUNC
    union all
    select 
        p.NUMFUNC,
        coalesce(e.DT_ENTROU, .) as DT_ENTROU format=yymmdd10.,
        coalesce(s.DT_SAIU, .) as DT_SAIU format=yymmdd10.
    from 
        previous p
    left join 
        entrou e on p.NUMFUNC = e.NUMFUNC
    left join 
        saiu s on p.NUMFUNC = s.NUMFUNC
    where e.NUMFUNC is null; /* Exclui registros que já estão na primeira parte do UNION */
quit;

/* Verificar a tabela final */
proc print data=final;
run;
