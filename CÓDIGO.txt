import os
import pandas as pd
from datetime import datetime, timedelta

def encontrar_arquivos(pasta, codigo):
    data_ontem = (datetime.now() - timedelta(days=1)).strftime('%Y%m%d')
    arquivos_encontrados = []
    for raiz, diretorios, arquivos in os.walk(pasta):
        for arquivo in arquivos:
            if arquivo.endswith('.txt') and codigo in arquivo and data_ontem in arquivo:
                caminho_completo = os.path.join(raiz, arquivo)
                ultima_modificacao = datetime.fromtimestamp(os.path.getmtime(caminho_completo)).strftime('%Y-%m-%d %H:%M:%S')
                arquivos_encontrados.append((arquivo, ultima_modificacao))

    if not arquivos_encontrados:
        return None
    
    # Ordenar por data de modificação, do mais recente ao mais antigo
    arquivos_encontrados.sort(key=lambda x: x[1], reverse=True)
    return arquivos_encontrados[0]

def salvar_em_excel(dados, caminho_excel):
    df = pd.DataFrame([dados], columns=['Nome do Arquivo', 'Última Modificação'])
    df.to_excel(caminho_excel, index=False)

if __name__ == "__main__":
    pasta = input("Digite o caminho da pasta: ")
    codigo = input("Digite o código a ser procurado: ")
    caminho_excel = input("Digite o caminho completo para salvar o arquivo Excel: ")

    resultado = encontrar_arquivos(pasta, codigo)
    if resultado:
        salvar_em_excel(resultado, caminho_excel)
        print(f"Arquivo Excel salvo em {caminho_excel}")
    else:
        print("Nenhum arquivo correspondente encontrado.")
